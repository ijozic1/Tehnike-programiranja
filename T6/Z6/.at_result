{
    "buildhost_description": {
        "id": "etf.c9sec2",
        "os": "Linux 5.4.0-137-generic x86_64\nUbuntu 20.04.5 LTS\n"
    },
    "tools": {
        "compile": "9.4.0",
        "compile[debug]": "9.4.0",
        "debug": "9.2",
        "profile[asan]": "9.4.0"
    },
    "status": 4,
    "test_results": {
        "3424": {
            "success": true,
            "status": 1,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 1,
                    "duration": 1,
                    "output": "",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "execute": {
                    "status": 1,
                    "duration": 0,
                    "output": "Unesite broj redova kvadratne matrice: Unesite elemente matrice: 3 12 5\n123 -6 2\n17 4 -31",
                    "exit_code": 0,
                    "success": true
                },
                "debug": {
                    "success": true
                },
                "profile[asan]": {
                    "output": "",
                    "status": 1,
                    "success": true,
                    "parsed_output": []
                }
            }
        },
        "3425": {
            "success": false,
            "status": 3,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 5,
                    "duration": 0,
                    "output": "main.cpp: In function ‘int _main()’:\nmain.cpp:103:49: error: call of overloaded ‘Testni_vektor(int&)’ is ambiguous\n  103 |         std::vector<std::deque<int>> struktura(n);\n      |                                                 ^\nIn file included from /usr/include/c++/9/vector:67,\n                 from main.cpp:3:\n/usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: ‘std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = std::Testni_deque<int>; _Alloc = std::allocator<std::Testni_deque<int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::Testni_deque<int> >]’\n  507 |       vector(size_type __n, const allocator_type& __a = allocator_type())\n      |       ^~~~~~\nmain.cpp:39:31: note:   inherited here\n   39 |         using std::vector<T>::vector; //naslijedi sve konstuktore iz std::vector (C++11 i dalje)\n      |                               ^~~~~~\nmain.cpp:49:9: note: candidate: ‘std::Testni_vektor<T>::Testni_vektor(unsigned int) [with T = std::Testni_deque<int>]’\n   49 |         Testni_vektor(unsigned int n)\n      |         ^~~~~~~~~~~~~\nmain.cpp:37:11: note: candidate: ‘std::Testni_vektor<std::Testni_deque<int> >::Testni_vektor(const std::Testni_vektor<std::Testni_deque<int> >&)’\n   37 |     class Testni_vektor : public std::vector<T> {\n      |           ^~~~~~~~~~~~~\nmain.cpp:37:11: note: candidate: ‘std::Testni_vektor<std::Testni_deque<int> >::Testni_vektor(std::Testni_vektor<std::Testni_deque<int> >&&)’",
                    "exit_code": 1,
                    "success": false,
                    "parsed_output": [
                        {
                            "type": "error",
                            "file": "main.cpp",
                            "line": 40,
                            "col": "49",
                            "message": "call of overloaded 'Testni_vektor(int&)' is ambiguous",
                            "code": "std::vector<std::deque<int>> struktura(n);"
                        }
                    ]
                }
            }
        },
        "3426": {
            "success": false,
            "status": 7,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 1,
                    "duration": 1,
                    "output": "",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "execute": {
                    "status": 1,
                    "duration": 0,
                    "output": "3\n3 3\n3 3 3",
                    "exit_code": 0,
                    "success": true
                },
                "debug": {
                    "success": true
                },
                "profile[asan]": {
                    "output": "=================================================================\n==865388==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x603000000058 at pc 0x55e486870db7 bp 0x7ffe234aad30 sp 0x7ffe234aad20\nWRITE of size 4 at 0x603000000058 thread T0\n    #0 0x55e486870db6 in decltype ((({parm#1}[0])[0])+(({parm#1}[0])[0]))** KreirajDinamickuKopiju2D<std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > >(std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > const&) main.cpp:19\n    #1 0x55e48686f1f9 in main main.cpp:65\n    #2 0x7f211c842082 in __libc_start_main ../csu/libc-start.c:308\n    #3 0x55e48686e57d in _start (outputIDgegs+0x257d)\n\n0x603000000058 is located 0 bytes to the right of 24-byte region [0x603000000040,0x603000000058)\nallocated by thread T0 here:\n    #0 0x7f211ce6b787 in operator new[](unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:107\n    #1 0x55e486870b2c in decltype ((({parm#1}[0])[0])+(({parm#1}[0])[0]))** KreirajDinamickuKopiju2D<std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > >(std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > const&) main.cpp:14\n    #2 0x55e48686f1f9 in main main.cpp:65\n    #3 0x7f211c842082 in __libc_start_main ../csu/libc-start.c:308\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow main.cpp:19 in decltype ((({parm#1}[0])[0])+(({parm#1}[0])[0]))** KreirajDinamickuKopiju2D<std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > >(std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > const&)\nShadow bytes around the buggy address:\n  0x0c067fff7fb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c067fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c067fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c067fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c067fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x0c067fff8000: fa fa 00 00 00 fa fa fa 00 00 00[fa]fa fa fa fa\n  0x0c067fff8010: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c067fff8020: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c067fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c067fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c067fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n=================================================================\n==865388==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x603000000058 at pc 0x55e48686f2ba bp 0x7ffe234aae30 sp 0x7ffe234aae20\nREAD of size 4 at 0x603000000058 thread T0\n    #0 0x55e48686f2b9 in main main.cpp:67\n    #1 0x7f211c842082 in __libc_start_main ../csu/libc-start.c:308\n    #2 0x55e48686e57d in _start (outputIDgegs+0x257d)\n\n0x603000000058 is located 0 bytes to the right of 24-byte region [0x603000000040,0x603000000058)\nallocated by thread T0 here:\n    #0 0x7f211ce6b787 in operator new[](unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:107\n    #1 0x55e486870b2c in decltype ((({parm#1}[0])[0])+(({parm#1}[0])[0]))** KreirajDinamickuKopiju2D<std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > >(std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > const&) main.cpp:14\n    #2 0x55e48686f1f9 in main main.cpp:65\n    #3 0x7f211c842082 in __libc_start_main ../csu/libc-start.c:308\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow main.cpp:67 in main\nShadow bytes around the buggy address:\n  0x0c067fff7fb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c067fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c067fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c067fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c067fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x0c067fff8000: fa fa 00 00 00 fa fa fa 00 00 00[fa]fa fa fa fa\n  0x0c067fff8010: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c067fff8020: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c067fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c067fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c067fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n",
                    "status": 2,
                    "success": false,
                    "parsed_output": [
                        {
                            "output": "ERROR: AddressSanitizer: heap-buffer-overflow on address 0x603000000058 at pc 0x55e486870db7 bp 0x7ffe234aad30 sp 0x7ffe234aad20\nWRITE of size 4 at 0x603000000058 thread T0\n    #0 0x55e486870db6 in decltype ((({parm#1}[0])[0])+(({parm#1}[0])[0]))** KreirajDinamickuKopiju2D<std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > >(std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > const&) main.cpp:19\n    #1 0x55e48686f1f9 in main main.cpp:65\n    #3 0x55e48686e57d in _start (outputIDgegs+0x257d)\n0x603000000058 is located 0 bytes to the right of 24-byte region [0x603000000040,0x603000000058)\nallocated by thread T0 here:\n    #1 0x55e486870b2c in decltype ((({parm#1}[0])[0])+(({parm#1}[0])[0]))** KreirajDinamickuKopiju2D<std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > >(std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > const&) main.cpp:14\n    #2 0x55e48686f1f9 in main main.cpp:65\nSUMMARY: AddressSanitizer: heap-buffer-overflow main.cpp:19 in decltype ((({parm#1}[0])[0])+(({parm#1}[0])[0]))** KreirajDinamickuKopiju2D<std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > >(std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > const&)\nShadow bytes around the buggy address:\n  0x0c067fff7fb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c067fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c067fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c067fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c067fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x0c067fff8000: fa fa 00 00 00 fa fa fa 00 00 00[fa]fa fa fa fa\n  0x0c067fff8010: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c067fff8020: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c067fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c067fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c067fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n",
                            "type": 2,
                            "file": "main.cpp",
                            "line": 19
                        },
                        {
                            "output": "ERROR: AddressSanitizer: heap-buffer-overflow on address 0x603000000058 at pc 0x55e48686f2ba bp 0x7ffe234aae30 sp 0x7ffe234aae20\nREAD of size 4 at 0x603000000058 thread T0\n    #0 0x55e48686f2b9 in main main.cpp:67\n    #2 0x55e48686e57d in _start (outputIDgegs+0x257d)\n0x603000000058 is located 0 bytes to the right of 24-byte region [0x603000000040,0x603000000058)\nallocated by thread T0 here:\n    #1 0x55e486870b2c in decltype ((({parm#1}[0])[0])+(({parm#1}[0])[0]))** KreirajDinamickuKopiju2D<std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > >(std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > const&) main.cpp:14\n    #2 0x55e48686f1f9 in main main.cpp:65\nSUMMARY: AddressSanitizer: heap-buffer-overflow main.cpp:67 in main\nShadow bytes around the buggy address:\n  0x0c067fff7fb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c067fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c067fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c067fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c067fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x0c067fff8000: fa fa 00 00 00 fa fa fa 00 00 00[fa]fa fa fa fa\n  0x0c067fff8010: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c067fff8020: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c067fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c067fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c067fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n",
                            "type": 2,
                            "file": "TEST_CODE",
                            "line": 9
                        }
                    ]
                }
            }
        },
        "3427": {
            "success": false,
            "status": 7,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 1,
                    "duration": 1,
                    "output": "",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "execute": {
                    "status": 1,
                    "duration": 0,
                    "output": "Ja\nopet testiram\nprogram na stringove",
                    "exit_code": 0,
                    "success": true
                },
                "debug": {
                    "success": true
                },
                "profile[asan]": {
                    "output": "\n=================================================================\n==865420==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 13 byte(s) in 2 object(s) allocated from:\n    #0 0x7f44d76c5587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104\n    #1 0x7f44d751729e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (/lib/x86_64-linux-gnu/libstdc++.so.6+0x14329e)\n\nSUMMARY: AddressSanitizer: 13 byte(s) leaked in 2 allocation(s).\n",
                    "status": 4,
                    "success": false,
                    "parsed_output": [
                        {
                            "output": "Direct leak of 13 byte(s) in 2 object(s) allocated from:\n    #1 0x7f44d751729e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (/lib/x86_64-linux-gnu/libstdc++.so.6+0x14329e)\nSUMMARY: AddressSanitizer: 13 byte(s) leaked in 2 allocation(s).\n",
                            "type": 4
                        }
                    ]
                }
            }
        },
        "3428": {
            "success": true,
            "status": 1,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 1,
                    "duration": 2,
                    "output": "",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "execute": {
                    "status": 1,
                    "duration": 0,
                    "output": "1.35 2.45 -5\n100 -50 11.5\n1.35 2.45 -5\n1.35 2.45 -5",
                    "exit_code": 0,
                    "success": true
                },
                "debug": {
                    "success": true
                },
                "profile[asan]": {
                    "output": "",
                    "status": 1,
                    "success": true,
                    "parsed_output": []
                }
            }
        },
        "3429": {
            "success": true,
            "status": 1,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 1,
                    "duration": 1,
                    "output": "",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "execute": {
                    "status": 1,
                    "duration": 0,
                    "output": "6 6 6 7\n12 23 34 45\n1000 1 2 30",
                    "exit_code": 0,
                    "success": true
                },
                "debug": {
                    "success": true
                },
                "profile[asan]": {
                    "output": "",
                    "status": 1,
                    "success": true,
                    "parsed_output": []
                }
            }
        },
        "3430": {
            "success": true,
            "status": 1,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 1,
                    "duration": 1,
                    "output": "",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "execute": {
                    "status": 1,
                    "duration": 0,
                    "output": "10000 20000 20000 10000\n11000 12 12 11\n1000 12222 2000 30000",
                    "exit_code": 0,
                    "success": true
                },
                "debug": {
                    "success": true
                },
                "profile[asan]": {
                    "output": "",
                    "status": 1,
                    "success": true,
                    "parsed_output": []
                }
            }
        },
        "3431": {
            "success": true,
            "status": 1,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 1,
                    "duration": 1,
                    "output": "",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "execute": {
                    "status": 1,
                    "duration": 0,
                    "output": "10000 20000 20000 10000 11000 12 12 11 1000 12222 2000 30000",
                    "exit_code": 0,
                    "success": true
                },
                "debug": {
                    "success": true
                },
                "profile[asan]": {
                    "output": "",
                    "status": 1,
                    "success": true,
                    "parsed_output": []
                }
            }
        },
        "3438": {
            "success": true,
            "status": 1,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 1,
                    "duration": 1,
                    "output": "",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "execute": {
                    "status": 1,
                    "duration": 0,
                    "output": "1 2 3\n1 2 3\n1 2 3\nNew pozvan 2 puta,  delete [] pozvan 2 puta, a alocirano ukupno 60 bajta i to redom: 24 36",
                    "exit_code": 0,
                    "success": true
                },
                "debug": {
                    "success": true
                },
                "profile[asan]": {
                    "output": "",
                    "status": 1,
                    "success": true,
                    "parsed_output": []
                }
            }
        },
        "3439": {
            "success": true,
            "status": 1,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 1,
                    "duration": 1,
                    "output": "",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "execute": {
                    "status": 1,
                    "duration": 0,
                    "output": "1 2 3\n1 2 3\n1 2 3\nNew pozvan 2 puta,  delete [] pozvan 2 puta, a alocirano ukupno 96 bajta i to redom: 24 72",
                    "exit_code": 0,
                    "success": true
                },
                "debug": {
                    "success": true
                },
                "profile[asan]": {
                    "output": "",
                    "status": 1,
                    "success": true,
                    "parsed_output": []
                }
            }
        },
        "3445": {
            "success": true,
            "status": 1,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 1,
                    "duration": 1,
                    "output": "",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "execute": {
                    "status": 1,
                    "duration": 0,
                    "output": "Nedovoljno memorije!New pozvan 1 puta,  delete [] pozvan 1 puta, a alocirano ukupno 24 bajta i to redom: 24",
                    "exit_code": 0,
                    "success": true
                },
                "debug": {
                    "success": true
                },
                "profile[asan]": {
                    "output": "",
                    "status": 1,
                    "success": true,
                    "parsed_output": []
                }
            }
        }
    },
    "time": 1681341251
}